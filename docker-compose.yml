version: "3.9"

services:
  # ================================= Bot =====================================
  # Generic Rasa bot, used to run console for example.
  bot:
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    container_name: bot
    env_file:
      - .env
    volumes:
      - ./bot/:/bot/
    ports:
      - 5005:5005
    depends_on:
      - actions
      - mongo
    networks:
      - bot

  # ================================= Mongo =====================================
  # Save data of conversations
  mongo:
    container_name: mongo
    image: mongo
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks:
      - bot
    volumes:
      - data-db:/data/db

  # ================================= Actions =================================
  # Rasa middleware used to connect with external APIs.
  actions:
    build:
      context: .
      dockerfile: ./docker/actions.Dockerfile
    container_name: actions
    env_file:
      - .env
    ports:
      - 5055:5055
    volumes:
      - ./bot:/bot
    command: sh -c "python -m rasa_sdk --actions actions"
    networks:
      - bot

  # ============================ Telegram Bot =================================
  # Specific Rasa bot integrated with Telegram.
  bot-telegram:
      build:
        context: .
        dockerfile: ./docker/bot.Dockerfile
      env_file:
        - .env

      volumes:
        - ./bot/:/bot/
      ports:
        - 80:80
      depends_on:
        - actions
        - mongo
      networks:
        - bot
      command: sh -c "make telegram"

networks:
  bot:
    driver: bridge

volumes:
  data-db: